name: CI

on: [push]

env:
  RUBY_VERSION: 3.0.2

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}

    - name: Install bundler
      run: gem install bundler

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle check || bundle install --without development
    - name: Standard
      run: bundle exec standardrb

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}

    - name: Install bundler
      run: gem install bundler

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle check || bundle install --without development
    - name: Brakeman
      run: bundle exec brakeman

    - name: Bundler audit
      run: bundle exec bundler-audit check --update

  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mephisto_test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}

    - name: Copy config
      run: |
        cp .env.example .env
    - name: Install bundler
      run: gem install bundler

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle check || bundle install --without development
    - name: Rspec
      env:
        RAILS_ENV: test
      run: |
        bundle exec rails db:migrate
        COVERAGE=on bundle exec rspec
